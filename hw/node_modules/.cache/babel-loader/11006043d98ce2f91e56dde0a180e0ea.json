{"ast":null,"code":"import * as firebase from 'firebase';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAbqoG0cJ1zq9ACmTBjCZZclLJP_PfUNCM\",\n  authDomain: \"labjs-ff268.firebaseapp.com\",\n  databaseURL: \"https://labjs-ff268.firebaseio.com\",\n  projectId: \"labjs-ff268\",\n  storageBucket: \"labjs-ff268.appspot.com\",\n  messagingSenderId: \"1054777787220\",\n  appId: \"1:1054777787220:web:4a4c481fd3e4b64870bec1\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nclass Firebase {\n  constructor() {\n    this.doSingUp = (surname, name, login, apple, password, file, authTrue, authFalse) => {\n      const ref = firebase.database().ref().child('users').child(login).child('Login');\n      ref.on('value', snap => {\n        if (login === snap.val()) {\n          authFalse();\n        } else {\n          const uploadTask = firebase.storage().ref('users/' + file.name).put(file);\n          uploadTask.on('state_changed', function (snapshot) {\n            var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n            console.log('Upload is ' + progress + '% done');\n\n            switch (snapshot.state) {\n              case firebase.storage.TaskState.PAUSED:\n                {\n                  console.log('Upload is paused');\n                  break;\n                }\n\n              case firebase.storage.TaskState.RUNNING:\n                {\n                  console.log('Upload is running');\n                  break;\n                }\n            }\n          }, function (error) {\n            switch (error.code) {\n              case 'storage/unauthorized':\n                {\n                  console.log(\"User doesn't have permission to access the object\");\n                  break;\n                }\n\n              case 'storage/canceled':\n                {\n                  console.log(\"User canceled the upload\");\n                  break;\n                }\n\n              case 'storage/unknown':\n                {\n                  console.log(\"Unknown error occurred, inspect error.serverResponse\");\n                  break;\n                }\n            }\n          }, function () {\n            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n              firebase.database().ref('users/' + login).set({\n                Surname: surname,\n                Name: name,\n                Login: login,\n                Apple: apple,\n                Password: password,\n                filePath: downloadURL\n              }, function (error) {\n                if (error) {\n                  authFalse();\n                } else {\n                  authTrue();\n                }\n              });\n              console.log('File available at', downloadURL);\n            });\n          });\n        }\n      });\n    };\n\n    this.doSingIn = (login, password, authTrue, authFalse) => {\n      const ref = firebase.database().ref().child('users').child(login).child('Password');\n      ref.on('value', snap => {\n        password === snap.val() ? authTrue() : authFalse();\n      });\n    };\n  }\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/home/nathankith/jslabs/hw/src/components/Firebase/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","Firebase","doSingUp","surname","name","login","apple","password","file","authTrue","authFalse","ref","database","child","on","snap","val","uploadTask","storage","put","snapshot","progress","bytesTransferred","totalBytes","console","log","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","then","downloadURL","set","Surname","Name","Login","Apple","Password","filePath","doSingIn"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,WAAW,EAAE,oCAHM;AAInBC,EAAAA,SAAS,EAAE,aAJQ;AAKnBC,EAAAA,aAAa,EAAE,yBALI;AAMnBC,EAAAA,iBAAiB,EAAE,eANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAAvB;AASAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;;AAEA,MAAMS,QAAN,CAAe;AAAA;AAAA,SAEXC,QAFW,GAEA,CAACC,OAAD,EAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,IAAxC,EAA8CC,QAA9C,EAAwDC,SAAxD,KAAsE;AAC7E,YAAMC,GAAG,GAAGpB,QAAQ,CAACqB,QAAT,GAAoBD,GAApB,GAA0BE,KAA1B,CAAgC,OAAhC,EAAyCA,KAAzC,CAA+CR,KAA/C,EAAsDQ,KAAtD,CAA4D,OAA5D,CAAZ;AACAF,MAAAA,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgBC,IAAI,IAAI;AACpB,YAAIV,KAAK,KAAKU,IAAI,CAACC,GAAL,EAAd,EAA0B;AACtBN,UAAAA,SAAS;AACZ,SAFD,MAEO;AACH,gBAAMO,UAAU,GAAG1B,QAAQ,CAAC2B,OAAT,GAAmBP,GAAnB,CAAuB,WAAWH,IAAI,CAACJ,IAAvC,EAA6Ce,GAA7C,CAAiDX,IAAjD,CAAnB;AAEAS,UAAAA,UAAU,CAACH,EAAX,CAAc,eAAd,EAA+B,UAAUM,QAAV,EAAoB;AAC/C,gBAAIC,QAAQ,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAAnE;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAeJ,QAAf,GAA0B,QAAtC;;AACA,oBAAQD,QAAQ,CAACM,KAAjB;AACI,mBAAKnC,QAAQ,CAAC2B,OAAT,CAAiBS,SAAjB,CAA2BC,MAAhC;AAAwC;AACpCJ,kBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;AACH;;AACD,mBAAKlC,QAAQ,CAAC2B,OAAT,CAAiBS,SAAjB,CAA2BE,OAAhC;AAAyC;AACrCL,kBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AACH;AARL;AAUH,WAbD,EAaG,UAAUK,KAAV,EAAiB;AAChB,oBAAQA,KAAK,CAACC,IAAd;AACI,mBAAK,sBAAL;AAA6B;AACzBP,kBAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACA;AACH;;AACD,mBAAK,kBAAL;AAAyB;AACrBD,kBAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA;AACH;;AACD,mBAAK,iBAAL;AAAwB;AACpBD,kBAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ;AACA;AACH;AAZL;AAcH,WA5BD,EA4BG,YAAY;AACXR,YAAAA,UAAU,CAACG,QAAX,CAAoBT,GAApB,CAAwBqB,cAAxB,GAAyCC,IAAzC,CAA8C,UAAUC,WAAV,EAAuB;AACjE3C,cAAAA,QAAQ,CAACqB,QAAT,GAAoBD,GAApB,CAAwB,WAAWN,KAAnC,EAA0C8B,GAA1C,CAA8C;AAC1CC,gBAAAA,OAAO,EAAEjC,OADiC;AAE1CkC,gBAAAA,IAAI,EAAEjC,IAFoC;AAG1CkC,gBAAAA,KAAK,EAAEjC,KAHmC;AAI1CkC,gBAAAA,KAAK,EAAEjC,KAJmC;AAK1CkC,gBAAAA,QAAQ,EAAEjC,QALgC;AAM1CkC,gBAAAA,QAAQ,EAAEP;AANgC,eAA9C,EAOG,UAAUJ,KAAV,EAAiB;AAChB,oBAAIA,KAAJ,EAAW;AACPpB,kBAAAA,SAAS;AACZ,iBAFD,MAEO;AACHD,kBAAAA,QAAQ;AACX;AACJ,eAbD;AAcAe,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCS,WAAjC;AACH,aAhBD;AAiBH,WA9CD;AA+CH;AACJ,OAtDD;AAuDH,KA3DU;;AAAA,SA6DXQ,QA7DW,GA6DA,CAACrC,KAAD,EAAQE,QAAR,EAAkBE,QAAlB,EAA4BC,SAA5B,KAA0C;AACjD,YAAMC,GAAG,GAAGpB,QAAQ,CAACqB,QAAT,GAAoBD,GAApB,GAA0BE,KAA1B,CAAgC,OAAhC,EAAyCA,KAAzC,CAA+CR,KAA/C,EAAsDQ,KAAtD,CAA4D,UAA5D,CAAZ;AACAF,MAAAA,GAAG,CAACG,EAAJ,CAAO,OAAP,EAAgBC,IAAI,IAAI;AACpBR,QAAAA,QAAQ,KAAKQ,IAAI,CAACC,GAAL,EAAb,GAA0BP,QAAQ,EAAlC,GAAuCC,SAAS,EAAhD;AACH,OAFD;AAGH,KAlEU;AAAA;;AAAA;;AAqEf,eAAeT,QAAf","sourcesContent":["import * as firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAbqoG0cJ1zq9ACmTBjCZZclLJP_PfUNCM\",\n    authDomain: \"labjs-ff268.firebaseapp.com\",\n    databaseURL: \"https://labjs-ff268.firebaseio.com\",\n    projectId: \"labjs-ff268\",\n    storageBucket: \"labjs-ff268.appspot.com\",\n    messagingSenderId: \"1054777787220\",\n    appId: \"1:1054777787220:web:4a4c481fd3e4b64870bec1\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nclass Firebase {\n\n    doSingUp = (surname, name, login, apple, password, file, authTrue, authFalse) => {\n        const ref = firebase.database().ref().child('users').child(login).child('Login');\n        ref.on('value', snap => {\n            if (login === snap.val()) {\n                authFalse();\n            } else {\n                const uploadTask = firebase.storage().ref('users/' + file.name).put(file);\n\n                uploadTask.on('state_changed', function (snapshot) {\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    console.log('Upload is ' + progress + '% done');\n                    switch (snapshot.state) {\n                        case firebase.storage.TaskState.PAUSED: {\n                            console.log('Upload is paused');\n                            break;\n                        }\n                        case firebase.storage.TaskState.RUNNING: {\n                            console.log('Upload is running');\n                            break;\n                        }\n                    }\n                }, function (error) {\n                    switch (error.code) {\n                        case 'storage/unauthorized': {\n                            console.log(\"User doesn't have permission to access the object\");\n                            break;\n                        }\n                        case 'storage/canceled': {\n                            console.log(\"User canceled the upload\");\n                            break;\n                        }\n                        case 'storage/unknown': {\n                            console.log(\"Unknown error occurred, inspect error.serverResponse\");\n                            break;\n                        }\n                    }\n                }, function () {\n                    uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                        firebase.database().ref('users/' + login).set({\n                            Surname: surname,\n                            Name: name,\n                            Login: login,\n                            Apple: apple,\n                            Password: password,\n                            filePath: downloadURL\n                        }, function (error) {\n                            if (error) {\n                                authFalse();\n                            } else {\n                                authTrue();\n                            }\n                        });\n                        console.log('File available at', downloadURL);\n                    });\n                });\n            }\n        })\n    }\n\n    doSingIn = (login, password, authTrue, authFalse) => {\n        const ref = firebase.database().ref().child('users').child(login).child('Password');\n        ref.on('value', snap => {\n            password === snap.val() ? authTrue() : authFalse();\n        })\n    }\n}\n\nexport default Firebase;"]},"metadata":{},"sourceType":"module"}