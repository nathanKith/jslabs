{"ast":null,"code":"var _jsxFileName = \"/home/nathankith/jslabs/hw/src/components/converter-form/converter-form.jsx\";\nimport React, { Component } from 'react';\nimport './converter-form.css';\nimport { ConverterOption } from '../converter-option/converter-option';\nconst INITIAL_STATE = {\n  left_select: '',\n  right_select: '',\n  left_input: '',\n  right_input: ''\n};\nexport class ConverterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeLeftInput = event => {\n      const value = event.target.value.trim().replace(/[-\\.;\":'a-zA-Zа-яА-Я]/, '');\n      this.setState({\n        [event.target.name]: value\n      });\n      const {\n        right_select\n      } = this.state;\n      Object.keys(this.state.data).map(key => key === right_select ? this.setState({\n        right_input: this.state.data[key] * value === 0 ? '' : (this.state.data[key] * value).toFixed(3)\n      }) : null);\n    };\n\n    this.onChangeRightInput = event => {\n      const value = event.target.value.trim().replace(/[-\\.;\":'a-zA-Zа-яА-Я]/, '');\n      this.setState({\n        [event.target.name]: value\n      });\n      const {\n        right_select\n      } = this.state;\n      Object.keys(this.state.data).map(key => key === right_select ? this.setState({\n        left_input: 1 / this.state.data[key] * value === 0 ? '' : (1 / this.state.data[key] * value).toFixed(3)\n      }) : null);\n    };\n\n    this.onChangeLeftSelect = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      const {\n        left_input,\n        right_select\n      } = this.state;\n      fetch('https://api.exchangeratesapi.io/latest?base=' + event.target.value).then(r => r.json()).then(d => {\n        this.setState({\n          data: d.rates\n        });\n        Object.keys(d.rates).map(key => key === right_select ? this.setState({\n          right_input: (this.state.data[key] * left_input).toFixed(3)\n        }) : null);\n      });\n    };\n\n    this.onChangeRightSelect = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      const {\n        left_input\n      } = this.state;\n      Object.keys(this.state.data).map(key => key === event.target.value ? this.setState({\n        right_input: (this.state.data[key] * left_input).toFixed(3)\n      }) : null);\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n    this.state = {\n      data: undefined\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.exchangeratesapi.io/latest?base=CAD').then(r => r.json()).then(d => this.setState({\n      data: d.rates\n    }));\n    this.setState({\n      left_select: \"CAD\",\n      right_select: \"CAD\"\n    });\n  }\n\n  render() {\n    const {\n      left_select,\n      right_select,\n      left_input,\n      right_input\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ConverterForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ConverterFormInner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ConverterHeaderText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"\\u041A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0435\\u0440\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ConverterInputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ConvertOption Left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"left_select\",\n      value: left_select,\n      onChange: this.onChangeLeftSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, !this.state.data ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 43\n      }\n    }, \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u044B\") : Object.keys(this.state.data).map(key => /*#__PURE__*/React.createElement(ConverterOption, {\n      convertName: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 83\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"InputConverter\",\n      name: \"left_input\",\n      value: left_input,\n      onkeyup: \"this.value = this.value.replace(/[^\\\\d]/g,'');\",\n      onChange: this.onChangeLeftInput,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ConvertOption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"right_select\",\n      value: right_select,\n      onChange: this.onChangeRightSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, !this.state.data ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 43\n      }\n    }, \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u044B\") : Object.keys(this.state.data).map(key => /*#__PURE__*/React.createElement(ConverterOption, {\n      convertName: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 83\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"InputConverter\",\n      name: \"right_input\",\n      value: right_input,\n      onChange: this.onChangeRightInput,\n      type: \"text\",\n      readonly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/nathankith/jslabs/hw/src/components/converter-form/converter-form.jsx"],"names":["React","Component","ConverterOption","INITIAL_STATE","left_select","right_select","left_input","right_input","ConverterForm","constructor","props","onChangeLeftInput","event","value","target","trim","replace","setState","name","state","Object","keys","data","map","key","toFixed","onChangeRightInput","onChangeLeftSelect","fetch","then","r","json","d","rates","onChangeRightSelect","undefined","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './converter-form.css'\nimport { ConverterOption } from '../converter-option/converter-option';\n\nconst INITIAL_STATE = {\n    left_select: '',\n    right_select: '',\n    left_input: '',\n    right_input: '',\n};\n\nexport class ConverterForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n        this.state = { data: undefined };\n    }\n\n    componentDidMount() {\n        fetch('https://api.exchangeratesapi.io/latest?base=CAD')\n            .then(r => r.json())\n            .then(d => this.setState({ data: d.rates }));\n        this.setState({ left_select: \"CAD\", right_select: \"CAD\" });\n    }\n\n    onChangeLeftInput = event => {\n        const value = event.target.value.trim().replace(/[-\\.;\":'a-zA-Zа-яА-Я]/, '');\n        this.setState({ [event.target.name]: value })\n\n        const { right_select } = this.state;\n        Object.keys(this.state.data).map(key => key === right_select ? this.setState({ right_input: (this.state.data[key] * value) === 0 ? '' : (this.state.data[key] * value).toFixed(3) }) : null)\n    }\n\n    onChangeRightInput = event => {\n        const value = event.target.value.trim().replace(/[-\\.;\":'a-zA-Zа-яА-Я]/, '');\n        this.setState({ [event.target.name]: value });\n\n        const { right_select } = this.state;\n        Object.keys(this.state.data).map(key => key === right_select ? this.setState({ left_input: ((1 / this.state.data[key]) * value) === 0 ? '' : ((1 / this.state.data[key]) * value).toFixed(3) }) : null)\n    }\n\n    onChangeLeftSelect = event => {\n        this.setState({ [event.target.name]: event.target.value });\n        const { left_input, right_select } = this.state;\n        fetch('https://api.exchangeratesapi.io/latest?base=' + event.target.value)\n            .then(r => r.json())\n            .then(d => {\n                this.setState({ data: d.rates });\n                Object.keys(d.rates).map(key => key === right_select ? this.setState({ right_input: (this.state.data[key] * left_input).toFixed(3) }) : null)\n            });\n    }\n\n    onChangeRightSelect = event => {\n        this.setState({ [event.target.name]: event.target.value });\n\n        const { left_input } = this.state;\n        Object.keys(this.state.data).map(key => key === event.target.value ? this.setState({ right_input: (this.state.data[key] * left_input).toFixed(3) }) : null)\n    }\n\n    render() {\n        const {\n            left_select,\n            right_select,\n            left_input,\n            right_input,\n        } = this.state;\n\n        return (\n            <div className=\"ConverterForm\">\n                <div className=\"ConverterFormInner\">\n                    <span className=\"ConverterHeaderText\">Конвертер</span>\n                    <div className=\"ConverterInputs\">\n                        <div className=\"ConvertOption Left\">\n                            <select name=\"left_select\" value={left_select} onChange={this.onChangeLeftSelect}>\n                                {\n                                    !this.state.data\n                                        ? <div>Данные не загружены</div>\n                                        : Object.keys(this.state.data).map(key => <ConverterOption convertName={key} />)\n                                }\n                            </select>\n                            <input className=\"InputConverter\" name=\"left_input\" value={left_input} onkeyup=\"this.value = this.value.replace(/[^\\d]/g,'');\" onChange={this.onChangeLeftInput} type=\"text\" />\n                        </div>\n\n                        <div className=\"ConvertOption\">\n                            <select name=\"right_select\" value={right_select} onChange={this.onChangeRightSelect} >\n                                {\n                                    !this.state.data\n                                        ? <div>Данные не загружены</div>\n                                        : Object.keys(this.state.data).map(key => <ConverterOption convertName={key} />)\n                                }\n                            </select>\n                            <input className=\"InputConverter\" name=\"right_input\" value={right_input} onChange={this.onChangeRightInput} type=\"text\" readonly/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}